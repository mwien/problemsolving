import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.IOException;
import java.util.Arrays;
import java.lang.Comparable;

public class DarkRoads {

    
    public static void main(String[] args) throws IOException {
	BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
	while(true) {
	    String in = br.readLine();
	    String[] split = in.split(" ");
	    int N = Integer.parseInt(split[0]);
	    int M = Integer.parseInt(split[1]);
	    if(N == 0 && M == 0) break;
	    Edge[] edges = new Edge[M];
	    int sum = 0;
	    for(int i = 0; i < M; i++) {
		in = br.readLine();
		split = in.split(" ");
		int a = Integer.parseInt(split[0]);
		int b = Integer.parseInt(split[1]);
		int w = Integer.parseInt(split[2]);
		edges[i] = new Edge(a, b, w);
		sum += w;
	    }
	    System.out.println(sum - kruskal(edges, N));

	}

    }

}



class Edge {

    Vertex t;
    int w;

    public Edge(Vertex t, int w) {
	this.t = t;
	this.w = w;
    }

}
