import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.IOException;

public class Sabotage {

    public static boolean BFS(Vertex[] G, int s, int t) {
	int N = G.length;
	for(int i = 0; i < N; i++) {
	    G[i].vis = false;
	}
	
	Queue<Vertex> q = new LinkedList<Vertex>();
	G[s].vis = true;
	G[s].pre = -1;
	q.add(G[s]);
	
	while(!q.isEmpty()) {
	    Vertex u = q.poll();
	    if(u.id == t) return true;
	    for(int i : u.adj.keySet()) {
		Edge e = u.adj.get(i);
		Vertex v = e.t;
		if(!v.vis && e.rw > 0) {
		    v.vis = true;
		    v.pre = u.id;
		    q.add(v);
		}
	    }
	}
	return (G[t].vis);
    }

    public static int edmondsKarp(Vertex[] G, int s, int t) {
	
	int maxflow = 0;
	while(BFS(G, s, t)) {
	    int pathflow = Integer.MAX_VALUE;
	    for(int v = t; v!= s; v = G[v].pre) {
		int u = G[v].pre;
		pathflow = Math.min(pathflow, G[u].adj.get(v).rw);
	    }
	    
	    for(int v = t; v != s; v = G[v].pre) {
		int u = G[v].pre;
		G[u].adj.get(v).rw -= pathflow;
		G[v].adj.get(u).rw += pathflow;
	    }
	    
	    maxflow += pathflow;
	}
	return maxflow;
    }

    public static int minCut(Vertex[] G, int s, int t) {
	edmondsKarp(G, s, t);
	
    }

    public static void main(String[] args) throws IOException {
	BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
	while(true) {
	    String in = br.readLine();
	    String split = in.split(" ");
	    int N = Integer.parseInt(split[0]);
	    int M = Integer.parseInt(split[1]);
	    if(N == 0 && M == 0) break;
	    Vertex[] G = new Vertex[N];
	    for(int i = 0; i < N; i++) {
		G[i] = new Vertex(i);
	    }
	    for(int i = 0; i < M; i++) {
		in = br.readLine();
		split = in.split(" ");
		int a = Integer.parseInt(split[0])-1;
		int b = Integer.parseInt(split[1])-1;
		int w = Integer.parseInt(split[2]);
		G[a].adj.add(new Edge(G[b], w));
		G[b].adj.add(new Edge(G[a], w));
	    }
	}
    }
}

class Vertex {

    int id;
    boolean vis = false;
    int pre = -1;

    ArrayList<Edge> adj = new ArrayList<Edge>();

    public Vertex(int id) {
	this.id = id;
    }

}

class Edge {

    Vertex t;
    int w;
    int rw;

    public Edge(Vertex t, int w) {
	this.t = t;
	this.w = w;
	this.rw = w;
    }

}
